
CREATE TABLE USERS (
    id VARCHAR(255) NOT NULL PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    balance DECIMAL(10, 2) NOT NULL,
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE CONCERTS (
    id VARCHAR(255) NOT NULL PRIMARY KEY,
    concertName VARCHAR(255) NOT NULL,
    date DATE NOT NULL,
    quantity DECIMAL(10, 2) NOT NULL
);

CREATE TABLE QUEUE (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    userId VARCHAR(255) NOT NULL,
    token VARCHAR(255) NOT NULL,
    queuePosition INT NOT NULL,
    status VARCHAR(50) NOT NULL,  -- 상태: ACTIVE, WAITING, EXPIRED
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    expiresAt TIMESTAMP NOT NULL
);

CREATE TABLE SEATS (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    concertId VARCHAR(255) NOT NULL,
    seatNumber INT NOT NULL,
    isReserved BOOLEAN NOT NULL,
    reservedBy VARCHAR(255) NOT NULL,
    reservedUntil TIMESTAMP NOT NULL,
    UNIQUE (concertId, seatNumber)
);

CREATE TABLE RESERVATIONS (
    id BIGINT AUTO_INCREMENT,
    userId VARCHAR(255) NOT NULL,
    concertId VARCHAR(255) NOT NULL,
    seatNumber INT NOT NULL,
    reservationStatus VARCHAR(50) NOT NULL,
    reservedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (concertId, seatNumber, reservationStatus)
);

CREATE TABLE PAYMENTS (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    userId VARCHAR(255) NOT NULL,
    reservationId BIGINT NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    paymentStatus VARCHAR(50) NOT NULL,
    paidAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE TOKENS (
    token VARCHAR(255) NOT NULL PRIMARY KEY,
    userId VARCHAR(255) NOT NULL,
    createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    expiresAt TIMESTAMP NOT NULL
);